{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass ProductService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://skien-assignment-2.onrender.com/api/products';\n  }\n  getProducts(filters) {\n    let params = new HttpParams();\n    for (let key in filters) {\n      if (filters[key]) params = params.set(key, filters[key]);\n    }\n    return this.http.get(this.apiUrl, {\n      params\n    });\n  }\n  getProduct(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  static {\n    this.ɵfac = function ProductService_Factory(t) {\n      return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ProductService,\n      factory: ProductService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\nexport { ProductService };","map":{"version":3,"names":["HttpParams","ProductService","constructor","http","apiUrl","getProducts","filters","params","key","set","get","getProduct","id","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\ajmal\\Desktop\\projects\\SAMPLE_ECOM\\frontend_angular\\src\\app\\services\\product.service.ts"],"sourcesContent":["\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Product } from '../models/product.model';\n\n@Injectable({ providedIn: 'root' })\nexport class ProductService {\n  private apiUrl = 'https://skien-assignment-2.onrender.com/api/products';\n\n  constructor(private http: HttpClient) {}\n\n  getProducts(filters: any): Observable<{ total: number; products: any[] }> {\n    let params = new HttpParams();\n    for (let key in filters) {\n      if (filters[key]) params = params.set(key, filters[key]);\n    }\n    return this.http.get<{ total: number; products: any[] }>(this.apiUrl, { params });\n  }\n\n  getProduct(id: number): Observable<Product> {\n    return this.http.get<Product>(`${this.apiUrl}/${id}`);\n  }\n}\n"],"mappings":"AAEA,SAAqBA,UAAU,QAAQ,sBAAsB;;;AAI7D,MACaC,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,sDAAsD;EAEhC;EAEvCC,WAAWA,CAACC,OAAY;IACtB,IAAIC,MAAM,GAAG,IAAIP,UAAU,EAAE;IAC7B,KAAK,IAAIQ,GAAG,IAAIF,OAAO,EAAE;MACvB,IAAIA,OAAO,CAACE,GAAG,CAAC,EAAED,MAAM,GAAGA,MAAM,CAACE,GAAG,CAACD,GAAG,EAAEF,OAAO,CAACE,GAAG,CAAC,CAAC;;IAE1D,OAAO,IAAI,CAACL,IAAI,CAACO,GAAG,CAAqC,IAAI,CAACN,MAAM,EAAE;MAAEG;IAAM,CAAE,CAAC;EACnF;EAEAI,UAAUA,CAACC,EAAU;IACnB,OAAO,IAAI,CAACT,IAAI,CAACO,GAAG,CAAU,GAAG,IAAI,CAACN,MAAM,IAAIQ,EAAE,EAAE,CAAC;EACvD;;;uBAfWX,cAAc,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAdf,cAAc;MAAAgB,OAAA,EAAdhB,cAAc,CAAAiB,IAAA;MAAAC,UAAA,EADD;IAAM;EAAA;;SACnBlB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}